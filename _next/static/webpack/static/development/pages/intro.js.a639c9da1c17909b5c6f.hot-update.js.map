{"version":3,"file":"static/webpack/static/development/pages/intro.js.a639c9da1c17909b5c6f.hot-update.js","sources":["webpack:///./components/common/ReponsiveLayout.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Waypoint } from \"react-waypoint\";\n\nconst Container = styled.div`\n  ${props => props.theme.container};\n  &.heading {\n    background-image: url(${require(\"../../static/images/img-01-bg.png\")});\n  }\n  &.country {\n    background: center center / cover rgb(250, 250, 250);\n  }\n`;\nconst Layout = styled.div`\n  ${props => props.theme.responsiveLayout};\n  &.heading {\n    height: 860px;\n  }\n  &.boast {\n    height: 573px;\n  }\n  &.default {\n    height: 1000px;\n  }\n`;\n\ninterface Props {\n  containerClass?: string;\n  layoutClass?: string;\n  onWaypoint?: (active: boolean) => void;\n  children: object;\n}\nconst ReponsiveLayout: React.FunctionComponent<Props> = ({\n  containerClass,\n  layoutClass,\n  children,\n  onWaypoint\n}) => {\n  const [waypointEnter, setWaypointEnter] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setIsLoading(false);\n  });\n  return (\n    <Container\n      className={`${containerClass || \"default\"} ${\n        waypointEnter ? \"animation-active\" : \"\"\n      }`}\n    >\n      <Waypoint\n        topOffset={\"30%\"}\n        onEnter={() => {\n          if (onWaypoint) onWaypoint(true);\n          setWaypointEnter(true);\n        }}\n      >\n        <Layout className={layoutClass || \"default\"}>{children}</Layout>\n      </Waypoint>\n    </Container>\n  );\n};\n\nexport default ReponsiveLayout;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAiBA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}